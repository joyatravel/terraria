kind: pipeline
name: server

steps:
  - name: install
    image: golang:1.13-rc
    commands: ["go mod download"]
    volumes:
      - name: gopath
        path: /go

  - name: lint_go
    image: stevenxie/golinter
    settings:
      revive_config: .revive.toml
    environment:
      CGO_ENABLED: "0"
    volumes:
      - name: gopath
        path: /go

  - name: info
    image: alpine/git
    commands:
      - git fetch --tags
      - git describe --tags 2> /dev/null | cut -c 2- > /info/version
      - git rev-parse HEAD 2> /dev/null > /info/commit
      - git rev-parse --abbrev-ref HEAD 2> /dev/null > /info/branch
      - head -1 < go.mod | awk '{print $2}' 2> /dev/null > /info/module
      - tail -n +1 /info/*
    volumes:
      - name: info
        path: /info

  - name: build_binaries
    image: golang:1.13-rc
    commands:
      - export MOD="$(cat /info/module)"
      - |
        [ -s /info/version ] && \
          export VER="$(cat /info/version)" || \
          export VER="$(cat /info/commit)"
      - export LDFLAGS="-X $${MOD}/internal/info.Version=$${VER}"
      - echo "LDFLAGS=$${LDFLAGS}" 1>&2
      - go test -ldflags "$LDFLAGS" -race ./...
      - export CGO_ENABLED=0
      - |
        for binary in $BINARIES; do
          go build -ldflags "$LDFLAGS" -o ./dist/$${binary} ./cmd/$${binary}
        done
    environment:
      BINARIES: server
    volumes:
      - name: gopath
        path: /go
      - name: info
        path: /info

  - name: build_image
    image: stevenxie/kaniko-drone
    settings: &image_build_settings
      repo: tugolo/terraria-status-server
      tags:
        - |
          $([ $DRONE_BUILD_EVENT != tag ] && \
            printf '%s-%s' $(cat /i/branch | tr / -) $(cat /i/commit) || true)
        - |
          $([ $DRONE_BUILD_EVENT != pull_request ] && \
            [ $(cat /i/branch) == master ] && \
            echo latest || true)
        - |
          $([ $DRONE_BUILD_EVENT != pull_request ] && \
            ([ $DRONE_BUILD_EVENT == tag ] || \
             [ $(cat /i/branch) == master ]) && \
             cat /i/version || true)
      username: stevenxie
      password:
        from_secret: docker_pass
    volumes:
      - name: info
        path: /i


volumes:
  - name: gopath
    temp: {}
  - name: info
    temp: {}

---

kind: pipeline
name: client

steps:
  - name: install
    image: node
    commands:
      - cd client
      - yarn install

  - name: build
    image: node
    commands:
      - cd client
      - yarn build:prod

  - name: publish
    image: plugins/gh-pages
    settings:
      username: stevenxie
      password:
        from_secret: github_pass
      pages_directory: client/dist
